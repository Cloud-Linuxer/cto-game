import { DataSource } from 'typeorm';
import { Choice } from '../src/database/entities/choice.entity';

const dataSource = new DataSource({
  type: 'postgres',
  host: 'localhost',
  port: 5432,
  username: 'cto_admin',
  password: 'cto_game_password',
  database: 'cto_game',
  entities: [Choice],
  synchronize: false,
});

const fixTurn7CarefulGrowth = async () => {
  await dataSource.initialize();

  console.log('\n=== Turn 7 Ïã†Ï§ëÌïú ÏÑ±Ïû• ÏàòÏùµÌôî Ï†ÑÌôò ÏãúÏûë ===\n');

  // Choice 64: Ïã†Ï§ëÌïú ÏÑ±Ïû•
  const choice64 = await dataSource
    .getRepository(Choice)
    .findOne({ where: { choiceId: 64 } });

  if (choice64) {
    const oldCash = choice64.effects.cash;
    const oldText = choice64.text;

    // ÏÉàÎ°úÏö¥ Ï†úÎ™©Í≥º ÎÇ¥Ïö©
    const newTitle = 'Ìö®Ïú®Ï†Å Ïö¥ÏòÅ ‚Äî ÎπÑÏö© ÏµúÏ†ÅÌôîÎ°ú ÏàòÏùµÏÑ± Í∞úÏÑ†';
    const newText = `${newTitle}

üìà ÎπÑÏ¶àÎãàÏä§ Ìö®Í≥º: Ïö¥ÏòÅ Ìö®Ïú®ÌôîÎ°ú ÏàòÏùµ Ï∞ΩÏ∂ú, ÏïàÏ†ïÏ†Å Ï∫êÏãúÌîåÎ°úÏö∞ ÌôïÎ≥¥
üñ•Ô∏è Ïù∏ÌîÑÎùº ÏòÅÌñ•: ÌÅ¥ÎùºÏö∞Îìú ÎπÑÏö© ÏµúÏ†ÅÌôî, Reserved Instance ÌôúÏö©
üí∞ ÏàòÏùµ: +5000Îßå Ïõê`;

    // DB Í∞í Î≥ÄÍ≤Ω: -8000ÎßåÏõê ‚Üí +5000ÎßåÏõê
    choice64.effects.cash = 50000000;

    // ÏÇ¨Ïö©Ïûê Ï¶ùÍ∞ÄÎèÑ Îçî ÌòÑÏã§Ï†ÅÏúºÎ°ú Ï°∞Ï†ï
    choice64.effects.users = 20000;

    // Ïã†Î¢∞ÎèÑÎäî Ïú†ÏßÄ (Ïù¥ÎØ∏ 4Ï†ê)

    await dataSource
      .getRepository(Choice)
      .update({ choiceId: 64 }, {
        text: newText,
        effects: choice64.effects
      });

    console.log('[Choice 64] Î≥ÄÍ≤Ω ÎÇ¥Ïö©');
    console.log('Ïù¥Ï†Ñ Ï†úÎ™©: Ïã†Ï§ëÌïú ÏÑ±Ïû• ‚Äî ÌïµÏã¨ Ïù∏Î†•Îßå Ï±ÑÏö© + Ïù∏ÌîÑÎùº ÏµúÏ†ÅÌôî');
    console.log('ÏÉà Ï†úÎ™©: Ìö®Ïú®Ï†Å Ïö¥ÏòÅ ‚Äî ÎπÑÏö© ÏµúÏ†ÅÌôîÎ°ú ÏàòÏùµÏÑ± Í∞úÏÑ†');
    console.log(`\nÏù¥Ï†Ñ Ìö®Í≥º: cash=${oldCash}Ïõê (-8000ÎßåÏõê), users=10000`);
    console.log(`ÏÉà Ìö®Í≥º: cash=50000000Ïõê (+5000ÎßåÏõê), users=20000`);
    console.log(`\nÏù¥Ï†Ñ ÌÖçÏä§Ìä∏: üí∞ ÎπÑÏö©: -8000Îßå Ïõê`);
    console.log(`ÏÉà ÌÖçÏä§Ìä∏: üí∞ ÏàòÏùµ: +5000Îßå Ïõê\n`);
  }

  // ÏàòÏ†ï ÌõÑ ÌôïÏù∏
  const updatedChoice = await dataSource
    .getRepository(Choice)
    .findOne({ where: { choiceId: 64 } });

  if (updatedChoice) {
    console.log('=== ÏàòÏ†ï ÏôÑÎ£å ÌôïÏù∏ ===');
    console.log('ÏµúÏ¢Ö Ï†úÎ™©:', updatedChoice.text.split('\n')[0]);
    console.log(`DB Ìö®Í≥º: cash=${updatedChoice.effects.cash}Ïõê, users=${updatedChoice.effects.users}, trust=${updatedChoice.effects.trust}`);
    const moneyLine = updatedChoice.text.split('\n').find(line => line.includes('üí∞'));
    console.log(`ÌÖçÏä§Ìä∏ ÌëúÏãú: ${moneyLine}`);
  }

  await dataSource.destroy();
};

fixTurn7CarefulGrowth()
  .then(() => {
    console.log('\n‚úÖ Turn 7 Ïã†Ï§ëÌïú ÏÑ±Ïû• ÏàòÏùµÌôî Ï†ÑÌôò ÏôÑÎ£å');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå Error fixing turn 7 careful growth:', error);
    process.exit(1);
  });